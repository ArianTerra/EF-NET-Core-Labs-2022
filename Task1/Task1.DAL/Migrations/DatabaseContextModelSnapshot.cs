// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Task1.DAL;

#nullable disable

namespace Task1.DAL.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Task1.DAL.DomainModels.TPH.Material", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Materials");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Material");
                });

            modelBuilder.Entity("Task1.DAL.DomainModels.TPT.UniversityUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UniversityUsers");
                });

            modelBuilder.Entity("Task1.DAL.DomainModels.TPH.Article", b =>
                {
                    b.HasBaseType("Task1.DAL.DomainModels.TPH.Material");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Article");
                });

            modelBuilder.Entity("Task1.DAL.DomainModels.TPH.Book", b =>
                {
                    b.HasBaseType("Task1.DAL.DomainModels.TPH.Material");

                    b.Property<int>("Pages")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Book");
                });

            modelBuilder.Entity("Task1.DAL.DomainModels.TPT.Student", b =>
                {
                    b.HasBaseType("Task1.DAL.DomainModels.TPT.UniversityUser");

                    b.Property<string>("Group")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Students", (string)null);
                });

            modelBuilder.Entity("Task1.DAL.DomainModels.TPT.Teacher", b =>
                {
                    b.HasBaseType("Task1.DAL.DomainModels.TPT.UniversityUser");

                    b.Property<DateTime>("TeachingSince")
                        .HasColumnType("datetime2");

                    b.ToTable("Teachers", (string)null);
                });

            modelBuilder.Entity("Task1.DAL.DomainModels.TPT.Student", b =>
                {
                    b.HasOne("Task1.DAL.DomainModels.TPT.UniversityUser", null)
                        .WithOne()
                        .HasForeignKey("Task1.DAL.DomainModels.TPT.Student", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Task1.DAL.DomainModels.TPT.Teacher", b =>
                {
                    b.HasOne("Task1.DAL.DomainModels.TPT.UniversityUser", null)
                        .WithOne()
                        .HasForeignKey("Task1.DAL.DomainModels.TPT.Teacher", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
